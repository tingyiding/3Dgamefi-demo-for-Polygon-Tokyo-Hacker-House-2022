import { Cancellable } from "@lincode/promiselikes";
declare type Emit<T> = (val: T, isState?: boolean) => void;
declare type On<T> = (cb: (val: T) => void, once?: boolean) => Cancellable;
declare type GetState<T> = () => T | undefined;
declare const _default: <T = void>() => readonly [Emit<T>, On<T>, Emit<T>, GetState<T>];
export default _default;
