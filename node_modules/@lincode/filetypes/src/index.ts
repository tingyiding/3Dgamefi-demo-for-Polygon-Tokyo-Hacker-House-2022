import { splitFileName } from "@lincode/utils"

export type ExtensionType = "image" | "audio" | "plainText" | "model" | "scene"

export const extensionMap = new Map<string, ExtensionType>()

export const getExtensionType = (val: string) => extensionMap.get(splitFileName(val)[1]?.toLowerCase() ?? "")

const register = (type: ExtensionType, extensions: Array<string>) => {
    for (const ext of extensions)
        extensionMap.set(ext, type)

    return extensions
}

export const imageExtensions = register("image", [
    "jpg", "jpeg", "gif", "png", "svg", "tiff", "webp", "hdr"
])

export const audioExtensions = register("audio", [
    "m4a", "mp3", "wav", "wma", "ogg", "flax", "flac", "aac"
])

export const plainTextExtensions = register("plainText", [
    "ls", "js", "ts", "jsx", "tsx", "py", "txt", "md", "json", "yaml", "c", "cpp", "h", "hpp", "css", "scss", "sass", "html"
])

export const modelExtensions = register("model", [
    "gltf", "glb", "fbx"
])

export const sceneExtensions = register("scene", [
    "l3d"
])