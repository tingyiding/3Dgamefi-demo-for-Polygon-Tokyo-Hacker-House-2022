import React, { useLayoutEffect, useRef } from "react";
import { settings } from "lingo3d";
import index from "lingo3d";
import { preventTreeShake } from "@lincode/utils";
import Setup from "./logical/Setup";
import htmlContainer from "./logical/HTML/htmlContainer";
preventTreeShake(index);
const World = ({ style, className, position, children, ...rest }) => {
    const divRef = useRef(null);
    useLayoutEffect(() => {
        const el = divRef.current;
        if (!el)
            return;
        el.appendChild(htmlContainer);
        settings.autoMount = el;
        return () => {
            settings.autoMount = false;
        };
    }, []);
    return (React.createElement(React.Fragment, null,
        React.createElement(Setup, { ...rest }),
        React.createElement("div", { style: {
                width: "100%", height: "100%", position: position !== null && position !== void 0 ? position : "absolute", top: 0, left: 0, display: "flex", ...style
            } },
            React.createElement("div", { style: { height: "100%" } }, children),
            React.createElement("div", { ref: divRef, style: { height: "100%", flexGrow: 1, position: "relative", overflow: "hidden" } }))));
};
export default World;
