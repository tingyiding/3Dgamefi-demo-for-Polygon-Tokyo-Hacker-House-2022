import { useRef, useLayoutEffect } from "react";
export default (effect, deps) => {
    const effectRef = useRef(effect);
    const depsRef = useRef();
    const cleanUpRef = useRef();
    useLayoutEffect(() => {
        var _a;
        let shouldRun = false;
        if (!depsRef.current)
            shouldRun = true;
        else
            for (let i = 0; i < depsRef.current.length; i++)
                if (depsRef.current[i] !== deps[i])
                    shouldRun = true;
        depsRef.current = deps;
        if (!shouldRun)
            return;
        (_a = cleanUpRef.current) === null || _a === void 0 ? void 0 : _a.call(cleanUpRef);
        cleanUpRef.current = effectRef.current();
    });
};
