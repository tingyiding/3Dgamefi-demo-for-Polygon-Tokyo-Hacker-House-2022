import { useCurrentRef } from "@lincode/hooks";
import { Keyboard } from "lingo3d";
import { isPressed } from "lingo3d/lib/api/keyboard";
import { useLayoutEffect, useState } from "react";
export default (cb) => {
    const [keys, setKeys] = useState("");
    const cbCurrentRef = useCurrentRef(cb);
    useLayoutEffect(() => {
        const keyboard = new Keyboard();
        let latestKey = "";
        keyboard.onKeyDown = k => {
            if (latestKey === k)
                return;
            latestKey = k;
            setKeys([...isPressed].join(" "));
        };
        keyboard.onKeyUp = () => {
            latestKey = "";
            setKeys([...isPressed].join(" "));
        };
        keyboard.onKeyPress = k => { var _a; return (_a = cbCurrentRef.current) === null || _a === void 0 ? void 0 : _a.call(cbCurrentRef, k); };
        return () => {
            keyboard.dispose();
        };
    }, []);
    return keys;
};
