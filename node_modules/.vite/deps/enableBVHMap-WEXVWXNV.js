import {
  MeshBVHVisualizer,
  computeBVH_default
} from "./chunk-ZT52DI3X.js";
import {
  pullBVHMap,
  pushBVHMap
} from "./chunk-W3OBF4EK.js";
import "./chunk-KPG43TSV.js";
import "./chunk-NMHDQJPG.js";
import {
  wireframeMaterial
} from "./chunk-NPOYVG57.js";
import {
  scene_default
} from "./chunk-VAFQCDDA.js";
import "./chunk-MO2ISMHQ.js";
import "./chunk-2PNJ75KS.js";
import "./chunk-J7HA7FW3.js";
import "./chunk-NXCTIVNA.js";
import {
  Mesh
} from "./chunk-57VJUUAA.js";
import "./chunk-XA4H47DG.js";

// node_modules/lingo3d/lib/display/core/mixins/PhysicsMixin/enableBVHMap.js
async function enableBVHMap_default(handle, debug) {
  if (handle.done)
    return;
  const [bvhMaps, geometries] = computeBVH_default(this);
  for (const bvhMap of bvhMaps)
    pushBVHMap(bvhMap);
  handle.then(() => {
    for (const bvhMap of bvhMaps)
      pullBVHMap(bvhMap);
  });
  if (debug)
    for (const geom of geometries) {
      const visualizer = new MeshBVHVisualizer(new Mesh(geom, wireframeMaterial), 20);
      scene_default.add(visualizer);
      handle.then(() => scene_default.remove(visualizer));
    }
}
export {
  enableBVHMap_default as default
};
//# sourceMappingURL=enableBVHMap-WEXVWXNV.js.map
