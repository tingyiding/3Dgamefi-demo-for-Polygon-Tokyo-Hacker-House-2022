import { Point3d } from "@lincode/math";
import PhysicsMixin from "../display/core/mixins/PhysicsMixin";
import Defaults from "./utils/Defaults";
import { ExtractProps } from "./utils/extractProps";
import Nullable from "./utils/Nullable";
export declare type PhysicsGroupIndex = 0 | 1 | 2 | 3 | 4 | 5;
export declare type PhysicsOptions = boolean | "2d" | "map" | "map-debug" | "character";
export declare type PhysicsShape = (this: PhysicsMixin) => Promise<void>;
export default interface IPhysics {
    maxAngularVelocityX: number;
    maxAngularVelocityY: number;
    maxAngularVelocityZ: number;
    maxVelocityX: number;
    maxVelocityY: number;
    maxVelocityZ: number;
    velocity: Point3d;
    noTumble: Nullable<boolean>;
    slippery: Nullable<boolean>;
    mass: Nullable<number>;
    physicsGroup: Nullable<PhysicsGroupIndex>;
    ignorePhysicsGroups: Nullable<Array<PhysicsGroupIndex>>;
    physics: PhysicsOptions;
    physicsShape: PhysicsShape;
}
export declare const physicsSchema: Required<ExtractProps<IPhysics>>;
export declare const physicsDefaults: Defaults<IPhysics>;
