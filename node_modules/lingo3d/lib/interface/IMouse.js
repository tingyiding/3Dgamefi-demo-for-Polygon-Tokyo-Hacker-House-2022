import { eventLoopDefaults, eventLoopSchema } from "./IEventLoop";
export class MouseEventPayload {
    clientX;
    clientY;
    x;
    y;
    z;
    xNorm;
    yNorm;
    constructor(clientX = 0, clientY = 0, x = 0, y = 0, z = 0, xNorm = 0, yNorm = 0) {
        this.clientX = clientX;
        this.clientY = clientY;
        this.x = x;
        this.y = y;
        this.z = z;
        this.xNorm = xNorm;
        this.yNorm = yNorm;
    }
}
export class LingoMouseEvent extends MouseEventPayload {
    point;
    distance;
    constructor(clientX, clientY, x, y, z, xNorm, yNorm, point, distance) {
        super(x, y, z, clientX, clientY, xNorm, yNorm);
        this.point = point;
        this.distance = distance;
    }
}
export const mouseSchema = {
    ...eventLoopSchema,
    onClick: Function,
    onRightClick: Function,
    onMouseMove: Function,
    onMouseDown: Function,
    onMouseUp: Function,
    onMousePress: Function
};
export const mouseDefaults = {
    ...eventLoopDefaults,
    onClick: undefined,
    onRightClick: undefined,
    onMouseMove: undefined,
    onMouseDown: undefined,
    onMouseUp: undefined,
    onMousePress: undefined
};
//# sourceMappingURL=IMouse.js.map