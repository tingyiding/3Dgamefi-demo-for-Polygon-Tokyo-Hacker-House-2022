import { Point3d } from "@lincode/math";
import IEventLoop from "./IEventLoop";
import Defaults from "./utils/Defaults";
import { ExtractProps } from "./utils/extractProps";
import Nullable from "./utils/Nullable";
export declare class MouseEventPayload {
    clientX: number;
    clientY: number;
    x: number;
    y: number;
    z: number;
    xNorm: number;
    yNorm: number;
    constructor(clientX?: number, clientY?: number, x?: number, y?: number, z?: number, xNorm?: number, yNorm?: number);
}
export declare class LingoMouseEvent extends MouseEventPayload {
    point: Point3d;
    distance: number;
    constructor(clientX: number, clientY: number, x: number, y: number, z: number, xNorm: number, yNorm: number, point: Point3d, distance: number);
}
export declare type SimpleMouseEvent = {
    clientX: number;
    clientY: number;
};
export default interface IMouse extends IEventLoop {
    onClick: Nullable<(e: SimpleMouseEvent) => void>;
    onRightClick: Nullable<(e: SimpleMouseEvent) => void>;
    onMouseMove: Nullable<(e: SimpleMouseEvent) => void>;
    onMouseDown: Nullable<(e: SimpleMouseEvent) => void>;
    onMouseUp: Nullable<(e: SimpleMouseEvent) => void>;
    onMousePress: Nullable<(e: SimpleMouseEvent) => void>;
}
export declare const mouseSchema: Required<ExtractProps<IMouse>>;
export declare const mouseDefaults: Defaults<IMouse>;
