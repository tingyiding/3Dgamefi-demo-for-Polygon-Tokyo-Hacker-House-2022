import StaticObjectManager from "../display/core/StaticObjectManager";
import IPhysics from "./IPhysics";
import IPositioned from "./IPositioned";
import IStaticObjectManager from "./IStaticObjectManaget";
import Defaults from "./utils/Defaults";
import { ExtractProps } from "./utils/extractProps";
import Nullable from "./utils/Nullable";
export declare type OnIntersectValue = (target: StaticObjectManager) => void;
export default interface ISimpleObjectManager extends IStaticObjectManager, IPositioned, IPhysics {
    onIntersect: Nullable<OnIntersectValue>;
    onIntersectOut: Nullable<OnIntersectValue>;
    onMoveToEnd: Nullable<() => void>;
    intersectIds: Nullable<Array<string>>;
    width: number;
    height: number;
    depth: number;
    scaleX: number;
    scaleY: number;
    scaleZ: number;
    scale: number;
    rotationX: number;
    rotationY: number;
    rotationZ: number;
    rotation: number;
    innerVisible: boolean;
}
export declare const simpleObjectManagerSchema: Required<ExtractProps<ISimpleObjectManager>>;
export declare const simpleObjectManagerDefaults: Defaults<ISimpleObjectManager>;
