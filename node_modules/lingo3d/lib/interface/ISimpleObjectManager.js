import { physicsDefaults, physicsSchema } from "./IPhysics";
import { positionedDefaults, positionedSchema } from "./IPositioned";
import { staticObjectManagerDefaults, staticObjectManagerSchema } from "./IStaticObjectManaget";
import { hideSchema } from "./utils/nonEditorSchemaSet";
export const simpleObjectManagerSchema = {
    ...staticObjectManagerSchema,
    ...positionedSchema,
    ...physicsSchema,
    onIntersect: Function,
    onIntersectOut: Function,
    onMoveToEnd: Function,
    intersectIds: Array,
    width: Number,
    height: Number,
    depth: Number,
    scaleX: Number,
    scaleY: Number,
    scaleZ: Number,
    scale: Number,
    rotationX: Number,
    rotationY: Number,
    rotationZ: Number,
    rotation: Number,
    innerVisible: Boolean
};
hideSchema(["intersectIds"]);
export const simpleObjectManagerDefaults = {
    ...staticObjectManagerDefaults,
    ...positionedDefaults,
    ...physicsDefaults,
    onIntersect: undefined,
    onIntersectOut: undefined,
    onMoveToEnd: undefined,
    intersectIds: undefined,
    width: 100,
    height: 100,
    depth: 100,
    scaleX: 1,
    scaleY: 1,
    scaleZ: 1,
    scale: 1,
    rotationX: 0,
    rotationY: 0,
    rotationZ: 0,
    rotation: 0,
    innerVisible: true
};
//# sourceMappingURL=ISimpleObjectManager.js.map