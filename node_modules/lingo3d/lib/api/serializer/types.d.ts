import IGroup from "../../interface/IGroup";
import IModel from "../../interface/IModel";
import IDummy from "../../interface/IDummy";
import IBuilding from "../../interface/IBuilding";
import ISvgMesh from "../../interface/ISvgMesh";
import IReflector from "../../interface/IReflector";
import ISprite from "../../interface/ISprite";
import ITrigger from "../../interface/ITrigger";
import IAudio from "../../interface/IAudio";
import ICamera from "../../interface/ICamera";
import IAmbientLight from "../../interface/IAmbientLight";
import IAreaLight from "../../interface/IAreaLight";
import IDirectionalLight from "../../interface/IDirectionalLight";
import ISkyLight from "../../interface/ISkyLight";
import IPointLight from "../../interface/IPointLight";
import ISpotLight from "../../interface/ISpotLight";
import IPrimitive from "../../interface/IPrimitive";
import ISetup from "../../interface/ISetup";
import ISkybox from "../../interface/ISkybox";
import IEnvironment from "../../interface/IEnvironment";
export declare type GameObjectType = "group" | "model" | "dummy" | "building" | "svgMesh" | "reflector" | "sprite" | "trigger" | "audio" | "ambientLight" | "areaLight" | "directionalLight" | "skyLight" | "pointLight" | "spotLight" | "camera" | "orbitCamera" | "thirdPersonCamera" | "firstPersonCamera" | "circle" | "cone" | "cube" | "cylinder" | "octahedron" | "plane" | "sphere" | "tetrahedron" | "torus" | "skybox" | "environment";
export declare type AnimationData = Record<string, //property name
Record<string, //frame number cast as string
number>>;
export declare type AnimationNode = {
    type: "animation";
    data: Record<string, //target name
    AnimationData>;
};
export declare type SetupNode = ISetup & {
    type: "setup";
};
declare type Node = {
    type: GameObjectType;
    children?: Array<BaseSceneGraphNode>;
};
export declare const nonSerializedProperties: string[];
export declare const nonEditorSettings: Array<keyof ISetup>;
export declare const nonSerializedSettings: Array<keyof ISetup>;
declare type TypedPropsNode<Props, Type extends GameObjectType> = Partial<Props> & Node & {
    type: Type;
};
export declare type GroupNode = TypedPropsNode<IGroup, "group">;
export declare type ModelNode = TypedPropsNode<IModel, "model">;
export declare type DummyNode = TypedPropsNode<IDummy, "dummy">;
export declare type BuildingNode = TypedPropsNode<IBuilding, "building">;
export declare type SvgMeshNode = TypedPropsNode<ISvgMesh, "svgMesh">;
export declare type ReflectorNode = TypedPropsNode<IReflector, "reflector">;
export declare type SpriteNode = TypedPropsNode<ISprite, "sprite">;
export declare type TriggerNode = TypedPropsNode<ITrigger, "trigger">;
export declare type AudioNode = TypedPropsNode<IAudio, "audio">;
export declare type CameraNode = TypedPropsNode<ICamera, "camera">;
export declare type AmbientLightNode = TypedPropsNode<IAmbientLight, "ambientLight">;
export declare type AreaLightNode = TypedPropsNode<IAreaLight, "areaLight">;
export declare type DirectionalLightNode = TypedPropsNode<IDirectionalLight, "directionalLight">;
export declare type SkyLightNode = TypedPropsNode<ISkyLight, "skyLight">;
export declare type PointLightNode = TypedPropsNode<IPointLight, "pointLight">;
export declare type SpotLightNode = TypedPropsNode<ISpotLight, "spotLight">;
export declare type CircleNode = TypedPropsNode<IPrimitive, "circle">;
export declare type ConeNode = TypedPropsNode<IPrimitive, "cone">;
export declare type CubeNode = TypedPropsNode<IPrimitive, "cube">;
export declare type CylinderNode = TypedPropsNode<IPrimitive, "cylinder">;
export declare type OctahedronNode = TypedPropsNode<IPrimitive, "octahedron">;
export declare type PlaneNode = TypedPropsNode<IPrimitive, "plane">;
export declare type SphereNode = TypedPropsNode<IPrimitive, "sphere">;
export declare type TetrahedronNode = TypedPropsNode<IPrimitive, "tetrahedron">;
export declare type TorusNode = TypedPropsNode<IPrimitive, "torus">;
export declare type SkyboxNode = TypedPropsNode<ISkybox, "skybox">;
export declare type EnvironmentNode = TypedPropsNode<IEnvironment, "environment">;
export declare type BaseSceneGraphNode = GroupNode | ModelNode | DummyNode | BuildingNode | SvgMeshNode | ReflectorNode | SpriteNode | TriggerNode | AudioNode | CameraNode | AmbientLightNode | AreaLightNode | DirectionalLightNode | SkyLightNode | PointLightNode | SpotLightNode | CircleNode | ConeNode | CubeNode | CylinderNode | OctahedronNode | PlaneNode | SphereNode | TetrahedronNode | TorusNode | SkyboxNode | EnvironmentNode;
export declare type SceneGraphNode = BaseSceneGraphNode | AnimationNode | SetupNode;
export {};
