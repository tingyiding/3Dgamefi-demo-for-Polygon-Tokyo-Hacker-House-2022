import { getObject3d } from "../../display/core/MeshItem";
import getWorldPosition from "../../display/utils/getWorldPosition";
import { vec2Point } from "../../display/utils/vec2Point";
import { scaleUp, scaleDown } from "../../engine/constants";
import EventLoopItem from "./EventLoopItem";
export default class PositionedItem extends EventLoopItem {
    get x() {
        return this.outerObject3d.position.x * scaleUp;
    }
    set x(val) {
        this.outerObject3d.position.x = val * scaleDown;
    }
    get y() {
        return this.outerObject3d.position.y * scaleUp;
    }
    set y(val) {
        this.outerObject3d.position.y = val * scaleDown;
    }
    get z() {
        return this.outerObject3d.position.z * scaleUp;
    }
    set z(val) {
        this.outerObject3d.position.z = val * scaleDown;
    }
    getWorldPosition() {
        return vec2Point(getWorldPosition(getObject3d(this)));
    }
}
export const isPositionedItem = (item) => item instanceof EventLoopItem && "getWorldPosition" in item;
//# sourceMappingURL=PositionedItem.js.map