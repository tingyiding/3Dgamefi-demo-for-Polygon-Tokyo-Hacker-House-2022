import { jsx as _jsx } from "preact/jsx-runtime";
import { h } from "preact";
import { useEffect, useState } from "preact/hooks";
import { preventTreeShake } from "@lincode/utils";
import TreeItem from "./TreeItem";
import Object3DTreeItem from "./Object3DTreeItem";
preventTreeShake(h);
const ModelTreeItem = ({ appendable, level }) => {
    const [loadedObject3d, setLoadedObject3d] = useState();
    const { loaded } = appendable;
    useEffect(() => {
        setLoadedObject3d(undefined);
        const handle = loaded.then(() => setLoadedObject3d(appendable.loadedGroup.children[0]));
        return () => {
            handle.cancel();
        };
    }, [loaded]);
    return (_jsx(TreeItem, { appendable: appendable, level: level, children: loadedObject3d && _jsx(Object3DTreeItem, { appendable: appendable, level: level + 1, object3d: loadedObject3d }) }));
};
export default ModelTreeItem;
//# sourceMappingURL=ModelTreeItem.js.map