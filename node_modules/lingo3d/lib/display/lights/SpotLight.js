import { applyMixins } from "@lincode/utils";
import { SpotLight as ThreeSpotLight, SpotLightHelper } from "three";
import LightBase from "../core/LightBase";
import PointLightMixin from "../core/mixins/PointLightMixin";
import { spotLightDefaults, spotLightSchema } from "../../interface/ISpotLight";
class SpotLight extends LightBase {
    static componentName = "spotLight";
    static defaults = spotLightDefaults;
    static schema = spotLightSchema;
    constructor() {
        super(new ThreeSpotLight(), SpotLightHelper);
        this.innerY = 0;
    }
    get angle() {
        return this.object3d.angle;
    }
    set angle(val) {
        this.object3d.angle = val;
    }
    get penumbra() {
        return this.object3d.penumbra;
    }
    set penumbra(val) {
        this.object3d.penumbra = val;
    }
}
applyMixins(SpotLight, [PointLightMixin]);
export default SpotLight;
//# sourceMappingURL=SpotLight.js.map