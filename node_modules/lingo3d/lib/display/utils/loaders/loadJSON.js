import { assert, forceGet } from "@lincode/utils";
import { FileLoader } from "three";
import { increaseLoadingCount, decreaseLoadingCount } from "../../../states/useLoadingCount";
import { handleProgress } from "./bytesLoaded";
const cache = new Map();
const loader = new FileLoader();
export default (url) => forceGet(cache, url, () => new Promise((resolve, reject) => {
    increaseLoadingCount();
    loader.load(url, data => {
        decreaseLoadingCount();
        try {
            assert(typeof data === "string");
            resolve(Object.freeze(JSON.parse(data)));
        }
        catch { }
    }, handleProgress, () => {
        decreaseLoadingCount();
        reject();
    });
}));
//# sourceMappingURL=loadJSON.js.map