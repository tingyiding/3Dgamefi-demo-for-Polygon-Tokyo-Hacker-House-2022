import { Object3D } from "three";
import SimpleObjectManager from "./SimpleObjectManager";
import IObjectManager from "../../interface/IObjectManager";
import FoundManager from "./FoundManager";
export default abstract class ObjectManager<T extends Object3D = Object3D> extends SimpleObjectManager<T> implements IObjectManager {
    constructor(object3d: T);
    get innerRotationX(): number;
    set innerRotationX(val: number);
    get innerRotationY(): number;
    set innerRotationY(val: number);
    get innerRotationZ(): number;
    set innerRotationZ(val: number);
    get innerRotation(): number;
    set innerRotation(val: number);
    get innerX(): number;
    set innerX(val: number);
    get innerY(): number;
    set innerY(val: number);
    get innerZ(): number;
    set innerZ(val: number);
    find(name: string, hiddenFromSceneGraph?: boolean): FoundManager | undefined;
    findAll(name: string): Array<FoundManager>;
}
