import { Vector3 } from "three";
import IPhysics, { PhysicsGroupIndex, PhysicsOptions, PhysicsShape } from "../../../../interface/IPhysics";
import type { Body } from "cannon-es";
import { Cancellable } from "@lincode/promiselikes";
import PositionedItem from "../../../../api/core/PositionedItem";
import { Point3d } from "@lincode/math";
export default abstract class PhysicsMixin extends PositionedItem implements IPhysics {
    protected _mAV?: Point3d;
    private getMAV;
    get maxAngularVelocityX(): number;
    set maxAngularVelocityX(val: number);
    get maxAngularVelocityY(): number;
    set maxAngularVelocityY(val: number);
    get maxAngularVelocityZ(): number;
    set maxAngularVelocityZ(val: number);
    protected _mV?: Point3d;
    private getMV;
    get maxVelocityX(): number;
    set maxVelocityX(val: number);
    get maxVelocityY(): number;
    set maxVelocityY(val: number);
    get maxVelocityZ(): number;
    set maxVelocityZ(val: number);
    protected physicsUpdate?: {
        position?: {
            x?: boolean;
            y?: boolean;
            z?: boolean;
        };
        rotation?: {
            x?: boolean;
            y?: boolean;
            z?: boolean;
        };
    };
    protected physicsRotate(): void;
    protected physicsMove(): void;
    protected physicsMoveXZ(): void;
    protected cannonBody?: Body;
    applyForce(x: number, y: number, z: number): void;
    applyImpulse(x: number, y: number, z: number): void;
    applyLocalForce(x: number, y: number, z: number): void;
    applyLocalImpulse(x: number, y: number, z: number): void;
    applyTorque(x: number, y: number, z: number): void;
    get velocity(): Point3d;
    set velocity(val: Point3d);
    private refreshCannon;
    protected _noTumble?: boolean;
    get noTumble(): boolean | undefined;
    set noTumble(val: boolean | undefined);
    protected _slippery?: boolean;
    get slippery(): boolean | undefined;
    set slippery(val: boolean | undefined);
    protected _mass?: number;
    get mass(): number | undefined;
    set mass(val: number | undefined);
    protected _physicsGroup?: PhysicsGroupIndex;
    get physicsGroup(): PhysicsGroupIndex | undefined;
    set physicsGroup(val: PhysicsGroupIndex | undefined);
    protected _ignorePhysicsGroups?: Array<PhysicsGroupIndex>;
    get ignorePhysicsGroups(): Array<PhysicsGroupIndex> | undefined;
    set ignorePhysicsGroups(val: Array<PhysicsGroupIndex> | undefined);
    protected _physicsShape?: PhysicsShape;
    get physicsShape(): PhysicsShape;
    set physicsShape(val: PhysicsShape);
    protected bvhVelocity?: Vector3;
    protected bvhOnGround?: boolean;
    protected bvhRadius?: number;
    protected bvhHalfHeight?: number;
    protected bvhMap?: boolean;
    protected bvhCharacter?: boolean;
    protected initPhysics(val: PhysicsOptions, handle: Cancellable): void;
    protected _physics?: PhysicsOptions;
    get physics(): PhysicsOptions;
    set physics(val: PhysicsOptions);
}
