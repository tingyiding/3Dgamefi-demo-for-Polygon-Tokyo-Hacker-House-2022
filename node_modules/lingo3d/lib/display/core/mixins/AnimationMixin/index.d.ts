import IAnimationMixin, { Animation } from "../../../../interface/IAnimationMixin";
import { Resolvable } from "@lincode/promiselikes";
import AnimationManager, { PlayOptions } from "./AnimationManager";
import EventLoopItem from "../../../../api/core/EventLoopItem";
import Nullable from "../../../../interface/utils/Nullable";
export default abstract class AnimationMixin extends EventLoopItem implements IAnimationMixin {
    animationManagers?: Record<string, AnimationManager>;
    get animations(): Record<string, AnimationManager>;
    set animations(val: Record<string, AnimationManager>);
    private createAnimation;
    private buildAnimation;
    private makeAnimationProxy;
    protected loadingAnims?: Array<Resolvable>;
    private loadingAnimsAsync;
    private animationManager?;
    get animationPaused(): boolean | undefined;
    set animationPaused(value: boolean | undefined);
    animationRepeat: Nullable<boolean>;
    onAnimationFinish: Nullable<() => void>;
    playAnimation(name?: string | number, o?: PlayOptions): Promise<void>;
    stopAnimation(): Promise<void>;
    protected animationName?: string | number;
    private setAnimation;
    private _animation?;
    get animation(): Animation | undefined;
    set animation(val: Animation | undefined);
}
